#############################################################################
# Makefile for building: testcase
# Generated by qmake (2.01a) (Qt 4.5.1) on: Mon Jun 8 12:25:57 2009
# Project:  testcase.pro
# Template: app
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DUNICODE -DQT_LARGEFILE_SUPPORT -DQT_DLL -DQT_XMLPATTERNS_LIB -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_THREAD_SUPPORT -DQT_NEEDS_QMAIN
CFLAGS        = -g -Wall $(DEFINES)
CXXFLAGS      = -g -frtti -fexceptions -mthreads -Wall $(DEFINES)
INCPATH       = -I"..\..\..\QT\qt\include\QtCore" -I"..\..\..\QT\qt\include\QtGui" -I"..\..\..\QT\qt\include\QtOpenGL" -I"..\..\..\QT\qt\include\QtXmlPatterns" -I"..\..\..\QT\qt\include" -I"..\..\..\QT\qt\include\ActiveQt" -I"debug" -I"." -I"e:\boost_1_39_0" -I"..\..\..\QT\qt\mkspecs\win32-g++"
LINK        =        g++
LFLAGS        =        -enable-stdcall-fixup -Wl,-enable-auto-import -Wl,-enable-runtime-pseudo-reloc -mthreads -Wl -Wl,-subsystem,windows
LIBS        =        -L"d:\QT\qt\lib" -lopengl32 -lglu32 -lgdi32 -luser32 -lmingw32 -lqtmaind -lQtXmlPatternsd4 -lQtOpenGLd4 -lQtGuid4 -lQtCored4
QMAKE         = d:\QT\qt\bin\qmake.exe
IDC           = d:\QT\qt\bin\idc.exe
IDL           = midl
ZIP           = zip -r -9
DEF_FILE      = 
RES_FILE      = 
COPY          = copy /y
COPY_FILE     = $(COPY)
COPY_DIR      = xcopy /s /q /y /i
DEL_FILE      = del
DEL_DIR       = rmdir
MOVE          = move
CHK_DIR_EXISTS= if not exist
MKDIR         = mkdir
INSTALL_FILE    = $(COPY_FILE)
INSTALL_PROGRAM = $(COPY_FILE)
INSTALL_DIR     = $(COPY_DIR)

####### Output directory

OBJECTS_DIR   = debug

####### Files

SOURCES       = main.cpp \
		node.cpp \
		edge.cpp \
		graphwidget.cpp \
		mainwindow.cpp \
		forestlogic.cpp debug\moc_graphwidget.cpp \
		debug\moc_mainwindow.cpp
OBJECTS       = debug/main.o \
		debug/node.o \
		debug/edge.o \
		debug/graphwidget.o \
		debug/mainwindow.o \
		debug/forestlogic.o \
		debug/moc_graphwidget.o \
		debug/moc_mainwindow.o
DIST          = 
QMAKE_TARGET  = testcase
DESTDIR        = debug\ #avoid trailing-slash linebreak
TARGET         = testcase.exe
DESTDIR_TARGET = debug\testcase.exe

####### Implicit rules

.SUFFIXES: .cpp .cc .cxx .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

first: all
all: Makefile.Debug  $(DESTDIR_TARGET)

$(DESTDIR_TARGET): ui_mainwindow.h $(OBJECTS) 
	$(LINK) $(LFLAGS) -o $(DESTDIR_TARGET) $(OBJECTS)  $(LIBS)


qmake:  FORCE
	@$(QMAKE) -spec ..\..\..\QT\qt\mkspecs\win32-g++ -win32 CONFIG+=release -o Makefile.Debug testcase.pro

dist:
	$(ZIP) testcase.zip $(SOURCES) $(DIST) testcase.pro ..\..\..\QT\qt\mkspecs\qconfig.pri ..\..\..\QT\qt\mkspecs\features\qt_functions.prf ..\..\..\QT\qt\mkspecs\features\qt_config.prf ..\..\..\QT\qt\mkspecs\features\exclusive_builds.prf ..\..\..\QT\qt\mkspecs\features\default_pre.prf ..\..\..\QT\qt\mkspecs\features\win32\default_pre.prf ..\..\..\QT\qt\mkspecs\features\debug.prf ..\..\..\QT\qt\mkspecs\features\debug_and_release.prf ..\..\..\QT\qt\mkspecs\features\default_post.prf ..\..\..\QT\qt\mkspecs\features\win32\default_post.prf ..\..\..\QT\qt\mkspecs\features\build_pass.prf ..\..\..\QT\qt\mkspecs\features\win32\rtti.prf ..\..\..\QT\qt\mkspecs\features\win32\exceptions.prf ..\..\..\QT\qt\mkspecs\features\win32\stl.prf ..\..\..\QT\qt\mkspecs\features\shared.prf ..\..\..\QT\qt\mkspecs\features\warn_on.prf ..\..\..\QT\qt\mkspecs\features\qt.prf ..\..\..\QT\qt\mkspecs\features\win32\opengl.prf ..\..\..\QT\qt\mkspecs\features\win32\thread.prf ..\..\..\QT\qt\mkspecs\features\moc.prf ..\..\..\QT\qt\mkspecs\features\win32\windows.prf ..\..\..\QT\qt\mkspecs\features\resources.prf ..\..\..\QT\qt\mkspecs\features\uic.prf ..\..\..\QT\qt\mkspecs\features\yacc.prf ..\..\..\QT\qt\mkspecs\features\lex.prf ..\..\..\QT\qt\mkspecs\features\include_source_dir.prf d:\QT\qt\lib\qtmaind.prl  HEADERS RESOURCES IMAGES SOURCES OBJECTIVE_SOURCES FORMS YACCSOURCES YACCSOURCES LEXSOURCES 

clean: compiler_clean 
	-$(DEL_FILE) debug\main.o debug\node.o debug\edge.o debug\graphwidget.o debug\mainwindow.o debug\forestlogic.o debug\moc_graphwidget.o debug\moc_mainwindow.o

distclean: clean
	-$(DEL_FILE) $(DESTDIR_TARGET)
	-$(DEL_FILE) Makefile.Debug

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: debug/moc_graphwidget.cpp debug/moc_mainwindow.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) debug\moc_graphwidget.cpp debug\moc_mainwindow.cpp
debug/moc_graphwidget.cpp: graphwidget.h
	D:/QT/qt/bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 graphwidget.h -o debug\moc_graphwidget.cpp

debug/moc_mainwindow.cpp: forestlogic.h \
		mainwindow.h \
		graphwidget.h \
		BaseHeaders.h \
		GraphConcept.h \
		Node.h \
		Layer.h \
		mainwindow.h
	D:/QT/qt/bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 mainwindow.h -o debug\moc_mainwindow.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_mainwindow.h
compiler_uic_clean:
	-$(DEL_FILE) ui_mainwindow.h
ui_mainwindow.h: mainwindow.ui
	d:\QT\qt\bin\uic.exe mainwindow.ui -o ui_mainwindow.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 



####### Compile

debug/main.o: main.cpp MainWindow.h \
		forestlogic.h \
		mainwindow.h \
		graphwidget.h \
		BaseHeaders.h \
		GraphConcept.h \
		Node.h \
		Layer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\main.o main.cpp

debug/node.o: node.cpp edge.h \
		node.h \
		graphwidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\node.o node.cpp

debug/edge.o: edge.cpp edge.h \
		node.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\edge.o edge.cpp

debug/graphwidget.o: graphwidget.cpp graphwidget.h \
		edge.h \
		node.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\graphwidget.o graphwidget.cpp

debug/mainwindow.o: mainwindow.cpp mainwindow.h \
		forestlogic.h \
		BaseHeaders.h \
		graphwidget.h \
		Node.h \
		Layer.h \
		GraphConcept.h \
		ui_mainwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\mainwindow.o mainwindow.cpp

debug/forestlogic.o: forestlogic.cpp ForestLogic.h \
		mainwindow.h \
		forestlogic.h \
		BaseHeaders.h \
		graphwidget.h \
		Node.h \
		Layer.h \
		GraphConcept.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\forestlogic.o forestlogic.cpp

debug/moc_graphwidget.o: debug/moc_graphwidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\moc_graphwidget.o debug\moc_graphwidget.cpp

debug/moc_mainwindow.o: debug/moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\moc_mainwindow.o debug\moc_mainwindow.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

